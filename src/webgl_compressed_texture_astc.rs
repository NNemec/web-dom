#[allow(unused_imports)]
use crate::*;
pub const COMPRESSED_RGBA_ASTC_4X4_KHR: i32 = 0x93B0;
pub const COMPRESSED_RGBA_ASTC_5X4_KHR: i32 = 0x93B1;
pub const COMPRESSED_RGBA_ASTC_5X5_KHR: i32 = 0x93B2;
pub const COMPRESSED_RGBA_ASTC_6X5_KHR: i32 = 0x93B3;
pub const COMPRESSED_RGBA_ASTC_6X6_KHR: i32 = 0x93B4;
pub const COMPRESSED_RGBA_ASTC_8X5_KHR: i32 = 0x93B5;
pub const COMPRESSED_RGBA_ASTC_8X6_KHR: i32 = 0x93B6;
pub const COMPRESSED_RGBA_ASTC_8X8_KHR: i32 = 0x93B7;
pub const COMPRESSED_RGBA_ASTC_10X5_KHR: i32 = 0x93B8;
pub const COMPRESSED_RGBA_ASTC_10X6_KHR: i32 = 0x93B9;
pub const COMPRESSED_RGBA_ASTC_10X8_KHR: i32 = 0x93BA;
pub const COMPRESSED_RGBA_ASTC_10X10_KHR: i32 = 0x93BB;
pub const COMPRESSED_RGBA_ASTC_12X10_KHR: i32 = 0x93BC;
pub const COMPRESSED_RGBA_ASTC_12X12_KHR: i32 = 0x93BD;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_4X4_KHR: i32 = 0x93D0;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_5X4_KHR: i32 = 0x93D1;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_5X5_KHR: i32 = 0x93D2;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_6X5_KHR: i32 = 0x93D3;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_6X6_KHR: i32 = 0x93D4;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_8X5_KHR: i32 = 0x93D5;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_8X6_KHR: i32 = 0x93D6;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_8X8_KHR: i32 = 0x93D7;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_10X5_KHR: i32 = 0x93D8;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_10X6_KHR: i32 = 0x93D9;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_10X8_KHR: i32 = 0x93DA;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_10X10_KHR: i32 = 0x93DB;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_12X10_KHR: i32 = 0x93DC;
pub const COMPRESSED_SRGB8_ALPHA8_ASTC_12X12_KHR: i32 = 0x93DD;
extern "C" {
    fn webgl_compressed_texture_astc_get_supported_profiles(instance: DOMReference)
        -> DOMReference;
}

pub fn get_supported_profiles(instance: DOMReference) -> DOMReference {
    unsafe { webgl_compressed_texture_astc_get_supported_profiles(instance) }
}
